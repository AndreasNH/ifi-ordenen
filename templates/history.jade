extends layout

block prepend title
  | #{page.title} -

block content
  != page.html
  - var references = env.helpers.getReferences(contents)
  #FilterHead
    h3#FilterTitle Filter: 
    p
      a(href='?') Fjern filter
    
  ul.history
    each year in env.helpers.getYears(contents)
      li.year(class=env.helpers.getClassesForYear(year))
        h3= year.year
        ul
          each event in year.events
            li(class=event.metadata.tags ? event.metadata.tags.split(', ') : '').event
              if event.metadata.date
                span.date #{moment(event.date).format('D. MMMM')}: 
              if event.getView() !== 'none'
                | #{event.title} (
                a(href=event.url) les mer
                | )
              else if event.metadata.url
                | #{event.title} (
                each text, index in _(event.metadata.url).keys()
                  if index !== 0
                    | , 
                  a(href=event.metadata.url[text])= text
                | )
              else
                != event.title
              if event.metadata.sources
                |  
                sup
                  | [
                  each source, index in env.helpers.getSources(event.metadata.sources, references)
                    if index !== 0
                      span , 
                    != source
                  | ]
          if _(year.appointments.map(function (appointment) { return appointment.persons; })).flatten().length > 0
            li.event.ifi-ordenen Tildelinger av Ifi-ordenen
              ul
                each appointment in year.appointments
                  if appointment.persons.length > 0
                    li #{appointment.title}: 
                      each person, index in appointment.persons
                        if index !== 0
                          span , 
                        a(href=person.url)= person.title
  p (Merk at tildelingene av Ifi-ordenen ikke nødvendigvis er listet i riktig rekkefølge her. Se <a href="../person/year">personer etter år</a> for mer nøyaktig fremstilling.)
  #Filters
    h3 Tilgjengelige filter
    ul.filters 
  h3 Referanser
  ol.references
    each reference in references
      li(id=reference.index).reference  
        != reference.html
        
block script
  script(type='text/javascript').
    (function shimOnHashChange(window) {
      // exit if the browser implements that event
      if ( "onhashchange" in window.document.body ) { return; }

      var location = window.location,
        oldURL = location.href,
        oldHash = location.hash;

      // check the location hash on a 100ms interval
      setInterval(function() {
        var newURL = location.href,
          newHash = location.hash;

        // if the hash has changed and a handler has been bound...
        if ( newHash != oldHash && typeof window.onhashchange === "function" ) {
          // execute the handler
          window.onhashchange({
            type: "hashchange",
            oldURL: oldURL,
            newURL: newURL
          });

          oldURL = newURL;
          oldHash = newHash;
        }
      }, 100);

    })(window);
    (function highlightReferences(window, document) {
      markReference();
      window.onhashchange = markReference;
      
      function markReference() {
        var references = document.getElementsByClassName('reference');
        for (var i = 0; i < references.length; i++) {
          references[i].className = 'reference';
        }
        if (!window.location.hash) { return; }
        var id = window.location.hash.substr(1);
        var reference = document.getElementById(id);
        if (!reference) { return; }
        reference.className += ' selected';
      }
    }(window, document));
    (function getParameterByName (window) {
      window._getParameterByName = getParameterByName;
      function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
      }
    }(window));
    (function setupFilters(window, document) {
      var filters = {
        'Applitude': 'applitude',
        'Cybernetisk Selskab': 'cyb',
        'dagen@ifi': 'dagen@ifi',
        'Designforeningen ved IFI (Defi)': 'defi',
        'Fotball ved Institutt for Informatikk (FIFI)': 'fifi',
        'IFI-Avis': 'ifi-avis',
        'IFI Makers': 'ifi-makers',
        'Ifi-ordenen': 'ifi-ordenen',
        'IFI Rotor': 'ifi-rotor',
        'IFI sjakk': 'ifi-sjakk',
        'Index': 'index',
        'Institutt for informatikk': 'ifi',
        'Nanoelektronikk, Robotikk og Digital Signalbehandling (Mikro)': 'mikro',
        'Navet': 'navet',
        'ProgNett': 'prognett',
        'Svett': 'svett',
        'Tekniske og Naturvitenskapelige anvendelser (TekNat)': 'teknat',
        'UniPlay': 'uniplay',
        'Verdande': 'verdande'
      };
      var filterSection = document.getElementById('Filters');
      filterSection.style = 'display: block';
      var list = filterSection.getElementsByClassName('filters')[0];
      var filterKey = window._getParameterByName('filter');
      if (filterKey) {
        var filterHead = document.getElementById('FilterHead');
        filterHead.style = 'display: block';
        var filterTitle = document.getElementById('FilterTitle');
        var filterName = Object.keys(filters).find(function (filterName) {
          return filters[filterName] === filterKey
        });
        filterTitle.innerText += ' ' + filterName;
      }
      Object.keys(filters).forEach(function (filterText) {
        var link = document.createElement('a');
        link.setAttribute('href', '?filter='+filters[filterText]);
        link.innerText = filterText;
        var listItem = document.createElement('li');
        listItem.appendChild(link);
        list.appendChild(listItem);
      });
    }(window, document));
    (function filterEvents (window, document) {
      filterEvent();
      
      function filterEvent() {
        var filterKey = window._getParameterByName('filter');
        if (!filterKey) { return; }
        var years = document.getElementsByClassName('year');
        for (var i = 0; i < years.length; i++) {
          years[i].style = "display: none";
        }
        var filterYears = document.getElementsByClassName('year-'+filterKey);
        for (var i = 0; i < filterYears.length; i++) {
          filterYears[i].style = "display: list-item";
        }
        var events = document.getElementsByClassName('event');
        for (var i = 0; i < events.length; i++) {
          events[i].style = "display: none";
        }
        var filterEvents = document.getElementsByClassName(filterKey);
        for (var i = 0; i < filterEvents.length; i++) {
          filterEvents[i].style = "display: list-item";
        }
      }
    }(window, document));